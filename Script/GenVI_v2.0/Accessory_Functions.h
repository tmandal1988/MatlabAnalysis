/*
 * Accessory_Functions.h
 *
 *  Created on: Oct 28, 2014
 *      Author: Tanmay
 */

#ifndef ACCESSORY_FUNCTIONS_H_
#define ACCESSORY_FUNCTIONS_H_

#include "Accessory_Functions.h" //Housekeeping functions
#include "fast_atan2.h"
#include "OSD_functions.h" //Onscreen Display functions
#define CRC32_POLYNOMIAL 0xEDB88320L

struct angle {
	double roll;
	double pitch;
	double yaw;
};

union double2byte {
	double data;
	uint8_t dataBytes[sizeof(double)];
};

union float2byte{
	float data;
	uint8_t dataBytes[sizeof(float)];
};

static const double multiSineElev5A2[801] = { -2.58534e-05, -0.0092336,
		-0.0184365, -0.0275343, -0.0364265, -0.0450137, -0.0531987, -0.0608879,
		-0.0679922, -0.0744285, -0.0801201, -0.0849986, -0.089004, -0.0920862,
		-0.0942053, -0.0953322, -0.0954495, -0.0945513, -0.0926438, -0.089745,
		-0.0858849, -0.0811051, -0.0754582, -0.0690077, -0.0618268, -0.0539978,
		-0.0456111, -0.0367643, -0.0275605, -0.0181077, -0.00851687, 0.00109908,
		0.0106268, 0.0199542, 0.0289713, 0.0375724, 0.045657, 0.053131,
		0.0599085, 0.0659123, 0.0710754, 0.0753418, 0.078667, 0.081019,
		0.0823785, 0.0827393, 0.0821083, 0.0805055, 0.0779639, 0.0745288,
		0.0702574, 0.0652179, 0.0594888, 0.0531577, 0.0463202, 0.0390785,
		0.0315401, 0.0238163, 0.0160208, 0.00826781, 0.000670848, -0.00665903,
		-0.0136148, -0.0200947, -0.0260042, -0.0312567, -0.0357753, -0.0394934,
		-0.0423561, -0.0443208, -0.0453578, -0.0454508, -0.0445972, -0.0428081,
		-0.0401084, -0.0365361, -0.0321422, -0.0269898, -0.0211534, -0.0147178,
		-0.00777684, -0.000432384, 0.00720732, 0.0150291, 0.0229162, 0.0307504,
		0.0384132, 0.0457876, 0.0527602, 0.0592219, 0.0650706, 0.0702116,
		0.0745597, 0.07804, 0.0805896, 0.0821575, 0.0827067, 0.0822136,
		0.0806691, 0.0780787, 0.0744622, 0.0698539, 0.0643019, 0.0578676,
		0.0506252, 0.0426601, 0.0340683, 0.0249552, 0.0154336, 0.00562296,
		-0.00435292, -0.0143671, -0.0242913, -0.0339978, -0.0433611, -0.0522597,
		-0.0605775, -0.0682056, -0.0750441, -0.0810027, -0.0860028, -0.0899779,
		-0.092875, -0.0946552, -0.095294, -0.094782, -0.093125, -0.0903438,
		-0.086474, -0.0815654, -0.0756816, -0.0688992, -0.0613062, -0.0530015,
		-0.0440933, -0.0346975, -0.0249364, -0.0149369, -0.00482896, 0.00525648,
		0.0151889, 0.02484, 0.0340856, 0.0428071, 0.0508932, 0.0582413,
		0.0647586, 0.0703639, 0.074988, 0.0785751, 0.081083, 0.0824843,
		0.0827659, 0.0819297, 0.0799923, 0.0769846, 0.0729517, 0.0679517,
		0.0620554, 0.0553449, 0.0479124, 0.0398594, 0.0312947, 0.0223333,
		0.0130948, 0.00370138, -0.00572321, -0.0150558, -0.0241754, -0.0329643,
		-0.0413103, -0.0491078, -0.0562589, -0.0626752, -0.0682784, -0.0730015,
		-0.0767894, -0.0795998, -0.0814031, -0.0821834, -0.0819377, -0.0806764,
		-0.0784228, -0.0752125, -0.0710931, -0.0661228, -0.0603702, -0.0539125,
		-0.0468349, -0.0392292, -0.031192, -0.022824, -0.0142281, -0.00550786,
		0.00323336, 0.0118944, 0.0203773, 0.0285889, 0.0364417, 0.0438552,
		0.0507568, 0.0570829, 0.0627791, 0.0678014, 0.072116, 0.0757002,
		0.078542, 0.0806402, 0.0820043, 0.0826541, 0.0826189, 0.0819374,
		0.0806564, 0.0788303, 0.0765199, 0.0737914, 0.0707155, 0.0673658,
		0.063818, 0.0601487, 0.0564339, 0.052748, 0.0491629, 0.0457466,
		0.0425623, 0.0396677, 0.0371139, 0.034945, 0.0331975, 0.0318995,
		0.0310709, 0.0307228, 0.0308579, 0.0314701, 0.0325452, 0.0340609,
		0.0359875, 0.0382883, 0.0409205, 0.0438357, 0.0469811, 0.0502999,
		0.0537329, 0.0572189, 0.0606958, 0.064102, 0.0673769, 0.070462,
		0.073302, 0.0758452, 0.0780448, 0.0798591, 0.0812523, 0.0821952,
		0.0826652, 0.0826467, 0.0821315, 0.0811184, 0.0796136, 0.07763,
		0.0751875, 0.0723122, 0.0690358, 0.0653954, 0.0614326, 0.0571931,
		0.0527252, 0.04808, 0.0433097, 0.0384672, 0.0336052, 0.0287753,
		0.0240272, 0.019408, 0.0149615, 0.0107275, 0.00674111, 0.00303259,
		-0.000373353, -0.00345775, -0.00620759, -0.00861595, -0.010682,
		-0.0124108, -0.0138135, -0.0149064, -0.0157112, -0.0162543, -0.0165661,
		-0.0166809, -0.0166357, -0.0164698, -0.0162242, -0.0159406, -0.0156609,
		-0.0154262, -0.0152763, -0.0152492, -0.0153798, -0.0157001, -0.0162379,
		-0.0170171, -0.0180566, -0.0193705, -0.0209678, -0.0228519, -0.0250209,
		-0.0274678, -0.03018, -0.0331404, -0.0363269, -0.0397132, -0.0432692,
		-0.0469617, -0.0507545, -0.0546093, -0.0584866, -0.0623458, -0.0661464,
		-0.0698483, -0.0734127, -0.0768026, -0.0799838, -0.0829248, -0.0855977,
		-0.0879789, -0.0900489, -0.091793, -0.0932017, -0.0942702, -0.0949992,
		-0.0953943, -0.0954663, -0.0952306, -0.0947073, -0.0939209, -0.0928992,
		-0.0916737, -0.0902785, -0.0887498, -0.0871255, -0.0854442, -0.0837449,
		-0.0820661, -0.0804451, -0.0789176, -0.0775169, -0.0762733, -0.0752137,
		-0.074361, -0.0737337, -0.0733457, -0.073206, -0.0733182, -0.0736809,
		-0.0742874, -0.0751257, -0.0761789, -0.0774253, -0.0788386, -0.0803887,
		-0.0820416, -0.0837604, -0.0855056, -0.0872357, -0.0889082, -0.0904798,
		-0.0919072, -0.0931482, -0.0941618, -0.0949091, -0.0953539, -0.0954636,
		-0.0952089, -0.0945654, -0.0935128, -0.0920364, -0.0901265, -0.0877788,
		-0.0849948, -0.0817815, -0.0781512, -0.0741218, -0.0697162, -0.0649619,
		-0.0598909, -0.0545391, -0.0489458, -0.0431529, -0.0372048, -0.0311471,
		-0.0250267, -0.0188902, -0.0127842, -0.00675386, -0.000842695,
		0.0049082, 0.0104607, 0.0157802, 0.0208358, 0.0256014, 0.030055,
		0.03418, 0.0379645, 0.0414019, 0.0444908, 0.0472347, 0.0496421,
		0.0517261, 0.0535042, 0.0549976, 0.0562312, 0.0572326, 0.0580321,
		0.0586613, 0.0591535, 0.059542, 0.0598603, 0.0601409, 0.0604151,
		0.0607118, 0.0610575, 0.0614755, 0.0619856, 0.0626033, 0.0633399,
		0.064202, 0.0651912, 0.0663044, 0.0675334, 0.068865, 0.0702813,
		0.0717601, 0.0732745, 0.0747943, 0.0762857, 0.0777121, 0.0790348,
		0.0802133, 0.0812064, 0.0819725, 0.0824706, 0.0826611, 0.0825059,
		0.08197, 0.0810213, 0.079632, 0.0777787, 0.0754428, 0.0726116,
		0.0692781, 0.0654414, 0.0611073, 0.0562877, 0.0510015, 0.0452739,
		0.0391363, 0.0326265, 0.0257878, 0.018669, 0.0113234, 0.00380892,
		-0.00381323, -0.0114788, -0.0191217, -0.0266741, -0.0340679, -0.0412355,
		-0.0481102, -0.0546273, -0.0607251, -0.0663453, -0.0714339, -0.0759419,
		-0.0798261, -0.0830492, -0.0855804, -0.0873964, -0.0884805, -0.0888241,
		-0.0884258, -0.087292, -0.0854362, -0.0828797, -0.0796504, -0.0757831,
		-0.0713186, -0.0663033, -0.0607887, -0.0548306, -0.0484886, -0.0418249,
		-0.034904, -0.0277916, -0.0205538, -0.0132566, -0.0059645, 0.00125966,
		0.0083558, 0.0152671, 0.0219409, 0.0283289, 0.0343878, 0.0400801,
		0.0453738, 0.050243, 0.0546682, 0.0586362, 0.0621401, 0.065179,
		0.0677585, 0.0698894, 0.0715885, 0.0728772, 0.0737818, 0.0743323,
		0.0745623, 0.0745083, 0.0742089, 0.0737044, 0.0730355, 0.0722437,
		0.0713697, 0.0704529, 0.0695315, 0.0686409, 0.0678141, 0.0670803,
		0.0664656, 0.0659916, 0.0656756, 0.0655306, 0.0655646, 0.065781,
		0.0661783, 0.0667506, 0.0674872, 0.0683732, 0.0693896, 0.0705139,
		0.07172, 0.0729791, 0.0742601, 0.0755297, 0.0767535, 0.077896,
		0.0789217, 0.0797951, 0.0804816, 0.0809478, 0.081162, 0.081095, 0.08072,
		0.0800134, 0.0789547, 0.0775274, 0.0757186, 0.0735196, 0.0709257,
		0.0679367, 0.0645562, 0.0607924, 0.0566571, 0.0521665, 0.04734,
		0.0422009, 0.0367753, 0.0310922, 0.0251834, 0.0190826, 0.0128251,
		0.00644796, -1.10815e-05, -0.00651357, -0.0130209, -0.0194945,
		-0.0258966, -0.0321899, -0.0383387, -0.0443083, -0.050066, -0.0555808,
		-0.060824, -0.0657689, -0.0703913, -0.0746694, -0.0785838, -0.0821177,
		-0.0852567, -0.0879888, -0.0903047, -0.0921969, -0.0936606, -0.0946929,
		-0.0952927, -0.0954612, -0.0952011, -0.0945168, -0.0934141, -0.0919004,
		-0.0899845, -0.0876761, -0.0849864, -0.0819276, -0.078513, -0.0747569,
		-0.0706746, -0.0662827, -0.0615986, -0.0566409, -0.0514292, -0.0459845,
		-0.0403287, -0.0344852, -0.0284785, -0.0223344, -0.0160802, -0.0097442,
		-0.00335635, 0.00305233, 0.00944957, 0.0158019, 0.022075, 0.0282334,
		0.0342412, 0.0400616, 0.0456578, 0.0509928, 0.0560297, 0.0607324,
		0.0650654, 0.0689942, 0.0724861, 0.0755102, 0.0780376, 0.0800423,
		0.0815008, 0.0823934, 0.0827035, 0.0824189, 0.0815311, 0.0800365,
		0.0779357, 0.0752345, 0.0719434, 0.068078, 0.0636589, 0.0587117,
		0.053267, 0.0473599, 0.0410304, 0.0343224, 0.0272841, 0.0199672,
		0.0124266, 0.00471982, -0.00309318, -0.0109509, -0.0187907, -0.0265492,
		-0.0341635, -0.0415709, -0.0487103, -0.0555224, -0.0619505, -0.0679408,
		-0.0734432, -0.0784118, -0.0828053, -0.0865874, -0.0897272, -0.0921996,
		-0.0939853, -0.0950715, -0.0954514, -0.0951247, -0.0940975, -0.0923819,
		-0.0899965, -0.0869656, -0.083319, -0.079092, -0.0743248, -0.069062,
		-0.0633522, -0.0572473, -0.0508026, -0.0440752, -0.0371243, -0.0300102,
		-0.0227938, -0.0155359, -0.00829672, -0.00113538, 0.00589072, 0.0127264,
		0.019319, 0.0256191, 0.0315806, 0.0371614, 0.0423231, 0.0470319,
		0.0512582, 0.0549773, 0.0581687, 0.0608168, 0.0629106, 0.0644437,
		0.0654137, 0.0658229, 0.0656774, 0.0649871, 0.0637654, 0.0620292,
		0.059798, 0.0570944, 0.0539431, 0.0503709, 0.0464065, 0.04208,
		0.0374229, 0.0324673, 0.0272464, 0.0217938, 0.0161433, 0.010329,
		0.00438483, -0.00165519, -0.00775739, -0.0138884, -0.0200152,
		-0.0261051, -0.032126, -0.0380461, -0.0438343, -0.0494598, -0.0548924,
		-0.0601024, -0.0650606, -0.0697385, -0.0741081, -0.0781425, -0.081815,
		-0.0851004, -0.0879742, -0.0904133, -0.0923958, -0.0939016, -0.0949123,
		-0.0954116, -0.0953853, -0.0948221, -0.0937133, -0.0920533, -0.0898399,
		-0.0870746, -0.0837626, -0.0799134, -0.0755406, -0.0706624, -0.0653015,
		-0.0594853, -0.0532458, -0.0466197, -0.0396484, -0.0323777, -0.0248575,
		-0.017142, -0.00928873, -0.00135871, 0.00658435, 0.0144744, 0.0222438,
		0.0298236, 0.0371447, 0.0441381, 0.0507359, 0.056872, 0.062483,
		0.0675087, 0.071893, 0.0755849, 0.0785388, 0.0807155, 0.0820828,
		0.0826158, 0.0822978, 0.0811205, 0.0790843, 0.0761987, 0.0724823,
		0.0679627, 0.062677, 0.0566709, 0.0499988, 0.042723, 0.0349139,
		0.0266485, 0.0180101, 0.00908762, -2.58534e-05 };

static const double multiSineElev5A5[801] = { -0.000129495, -0.0216228,
		-0.0402974, -0.0545606, -0.0632219, -0.06559, -0.061523, -0.0514317,
		-0.0362327, -0.0172598, 0.00386027, 0.0253553, 0.0454644, 0.062591,
		0.075438, 0.0831133, 0.085198, 0.0817705, 0.0733866, 0.0610175,
		0.0459529, 0.0296778, 0.0137349, -0.000413673, -0.0115147, -0.0186299,
		-0.0212101, -0.0191331, -0.0127016, -0.00260243, 0.0101678, 0.024403,
		0.0388047, 0.0521037, 0.0631765, 0.071144, 0.0754463, 0.0758841,
		0.0726273, 0.0661877, 0.0573616, 0.0471464, 0.0366415, 0.0269415,
		0.0190329, 0.013704, 0.0114748, 0.0125549, 0.0168313, 0.0238869,
		0.033048, 0.0434541, 0.0541448, 0.0641536, 0.0726001, 0.0787729,
		0.082193, 0.0826552, 0.0802415, 0.0753073, 0.0684411, 0.0604033,
		0.0520493, 0.0442453, 0.0377843, 0.0333107, 0.0312609, 0.0318242,
		0.0349291, 0.0402536, 0.0472603, 0.0552517, 0.0634387, 0.0710186,
		0.0772516, 0.0815313, 0.0834405, 0.0827884, 0.079626, 0.0742373,
		0.0671092, 0.0588817, 0.0502846, 0.0420666, 0.0349226, 0.0294282,
		0.0259854, 0.0247858, 0.0257938, 0.0287515, 0.0332045, 0.0385457,
		0.0440723, 0.0490517, 0.0527885, 0.0546878, 0.0543077, 0.0513975,
		0.0459171, 0.0380379, 0.0281238, 0.0166958, 0.00438274, -0.00813511,
		-0.0201867, -0.0311671, -0.040587, -0.0481099, -0.0535737, -0.0569961,
		-0.058563, -0.0586025, -0.0575463, -0.0558842, -0.054115, -0.0526994,
		-0.0520184, -0.0523426, -0.0538129, -0.0564352, -0.0600891, -0.0645476,
		-0.0695074, -0.0746245, -0.0795523, -0.0839775, -0.0876508, -0.0904092,
		-0.0921877, -0.0930201, -0.0930295, -0.0924082, -0.0913928, -0.0902338,
		-0.089166, -0.0883817, -0.0880095, -0.0881017, -0.0886305, -0.0894943,
		-0.0905322, -0.0915458, -0.0923253, -0.092676, -0.0924445, -0.0915389,
		-0.0899421, -0.087717, -0.0850011, -0.0819932, -0.0789317, -0.0760679,
		-0.0736367, -0.0718277, -0.0707603, -0.0704657, -0.0708771, -0.07183,
		-0.0730739, -0.0742915, -0.0751277, -0.0752219, -0.0742433, -0.0719237,
		-0.0680862, -0.0626649, -0.0557156, -0.0474149, -0.0380472, -0.0279829,
		-0.0176466, -0.00748112, 0.00209087, 0.0107039, 0.0180808, 0.0240566,
		0.0285908, 0.0317686, 0.0337903, 0.0349495, 0.0356027, 0.0361332,
		0.0369125, 0.0382628, 0.0404254, 0.0435356, 0.0476094, 0.0525409,
		0.0581119, 0.064012, 0.0698679, 0.075278, 0.0798503, 0.0832383,
		0.085173, 0.0854867, 0.0841271, 0.0811603, 0.0767625, 0.0712012,
		0.0648078, 0.0579455, 0.0509738, 0.0442147, 0.0379238, 0.0322679,
		0.0273128, 0.0230216, 0.0192629, 0.0158298, 0.0124651, 0.00889244,
		0.00484846, 0.000113568, -0.00546235, -0.0119416, -0.0192896,
		-0.0273761, -0.0359863, -0.0448408, -0.0536218, -0.0620037, -0.0696841,
		-0.0764116, -0.0820089, -0.0863872, -0.0895512, -0.091594, -0.0926823,
		-0.0930336, -0.0928878, -0.0924759, -0.0919896, -0.0915551, -0.0912136,
		-0.0909117, -0.0905013, -0.0897518, -0.0883714, -0.0860367, -0.0824275,
		-0.0772642, -0.0703421, -0.0615609, -0.0509459, -0.038657, -0.0249867,
		-0.0103442, 0.00477106, 0.0198058, 0.034195, 0.0474065, 0.0589837,
		0.0685825, 0.0759984, 0.0811819, 0.0842398, 0.0854226, 0.0850987,
		0.0837175, 0.0817658, 0.0797197, 0.0779986, 0.0769235, 0.0766857,
		0.0773274, 0.0787364, 0.0806564, 0.082711, 0.0844398, 0.0853438,
		0.0849339, 0.0827814, 0.078562, 0.0720919, 0.0633511, 0.0524928,
		0.039836, 0.0258445, 0.0110911, -0.00378622, -0.0181361, -0.0313453,
		-0.0428877, -0.052365, -0.0595362, -0.0643324, -0.0668563, -0.0673671,
		-0.0662504, -0.0639783, -0.0610618, -0.058001, -0.0552372, -0.0531114,
		-0.0518338, -0.0514655, -0.0519159, -0.052954, -0.0542339, -0.055331,
		-0.0557857, -0.0551502, -0.0530347, -0.0491466, -0.0433222, -0.0355445,
		-0.0259484, -0.0148111, -0.00252994, 0.0104109, 0.0234809, 0.0361471,
		0.0479173, 0.0583785, 0.0672265, 0.0742842, 0.0795073, 0.0829771,
		0.0848807, 0.0854814, 0.0850827, 0.0839896, 0.08247, 0.0807231,
		0.0788549, 0.0768656, 0.0746497, 0.0720085, 0.0686744, 0.0643446,
		0.0587204, 0.0515488, 0.0426615, 0.032008, 0.0196785, 0.00591444,
		-0.00889502, -0.0242305, -0.0394728, -0.0539441, -0.0669558, -0.0778593,
		-0.0860954, -0.0912376, -0.093025, -0.0913831, -0.0864293, -0.0784631,
		-0.0679421, -0.0554457, -0.0416294, -0.0271746, -0.0127378, 0.00109676,
		0.0138553, 0.0252023, 0.0349544, 0.0430797, 0.0496829, 0.0549784,
		0.0592538, 0.0628272, 0.0660041, 0.0690358, 0.0720855, 0.0752044,
		0.0783203, 0.08124, 0.0836649, 0.0852191, 0.0854867, 0.0840552,
		0.0805604, 0.0747296, 0.0664173, 0.0556323, 0.0425509, 0.0275169,
		0.0110274, -0.00629466, -0.0237389, -0.0405534, -0.0559949, -0.0693778,
		-0.0801197, -0.0877785, -0.0920787, -0.0929248, -0.090401, -0.0847581,
		-0.0763883, -0.0657916, -0.053535, -0.0402107, -0.026395, -0.0126114,
		0.000697917, 0.0131916, 0.0246377, 0.0349122, 0.0439871, 0.0519109,
		0.0587839, 0.0647304, 0.0698717, 0.0743018, 0.0780692, 0.0811655,
		0.0835223, 0.0850164, 0.0854828, 0.0847329, 0.0825776, 0.0788511,
		0.0734346, 0.0662763, 0.0574055, 0.0469415, 0.0350934, 0.0221535,
		0.00848337, -0.00550549, -0.0193748, -0.0326843, -0.0450162, -0.055997,
		-0.0653155, -0.0727349, -0.0780995, -0.0813345, -0.0824415, -0.0814879,
		-0.0785944, -0.0739205, -0.0676505, -0.0599804, -0.0511089, -0.0412306,
		-0.0305346, -0.0192057, -0.00742916, 0.00460261, 0.0166828, 0.0285836,
		0.0400523, 0.0508099, 0.0605549, 0.0689706, 0.0757375, 0.0805496,
		0.0831325, 0.0832639, 0.080793, 0.0756577, 0.0678988, 0.0576679,
		0.0452301, 0.0309591, 0.0153262, -0.00111774, -0.0177656, -0.0339809,
		-0.0491278, -0.0626011, -0.0738551, -0.0824301, -0.0879735, -0.0902558,
		-0.089181, -0.0847892, -0.0772535, -0.0668712, -0.0540493, -0.0392858,
		-0.0231488, -0.0062527, 0.0107656, 0.0272709, 0.0426524, 0.0563448,
		0.0678476, 0.0767409, 0.0826997, 0.0855038, 0.0850454, 0.0813331,
		0.0744922, 0.0647618, 0.0524878, 0.0381124, 0.0221593, 0.00521636,
		-0.0120856, -0.0290967, -0.0451727, -0.0597013, -0.0721278, -0.0819782,
		-0.0888805, -0.0925813, -0.0929565, -0.0900172, -0.0839083, -0.0749015,
		-0.0633812, -0.0498264, -0.0347877, -0.0188616, -0.00266375, 0.0131975,
		0.0281458, 0.0416585, 0.0532843, 0.0626559, 0.0694988, 0.0736339,
		0.0749773, 0.0735361, 0.0694012, 0.0627397, 0.0537855, 0.0428311,
		0.0302189, 0.0163339, 0.00159706, -0.0135414, -0.0286088, -0.0431184,
		-0.0565786, -0.0685054, -0.0784368, -0.0859503, -0.0906817, -0.092346,
		-0.0907573, -0.0858478, -0.0776832, -0.0664723, -0.0525709, -0.0364769,
		-0.0188171, -0.000324542, 0.0181922, 0.0358864, 0.0519168, 0.0654927,
		0.0759195, 0.0826409, 0.0852743, 0.0836378, 0.0777659, 0.0679118,
		0.0545381, 0.0382934, 0.0199777, 0.00049925, -0.0191764, -0.0380792,
		-0.0552884, -0.0699815, -0.0814774, -0.0892692, -0.0930463, -0.0927047,
		-0.0883437, -0.0802532, -0.0688893, -0.0548434, -0.0388061, -0.0215281,
		-0.00378237, 0.0136722, 0.0301219, 0.0449241, 0.0575273, 0.067484,
		0.0744591, 0.0782325, 0.0786991, 0.075866, 0.0698477, 0.060862,
		0.0492243, 0.0353423, 0.0197092, 0.00289536, -0.0144627, -0.0316777,
		-0.0480309, -0.0627972, -0.0752749, -0.084819, -0.0908784, -0.0930324,
		-0.0910254, -0.0847968, -0.0745017, -0.0605216, -0.0434606, -0.0241273,
		-0.00350147, 0.0173141, 0.0371537, 0.054858, 0.0693484, 0.0797002,
		0.0852103, 0.0854542, 0.0803258, 0.0700578, 0.0552191, 0.0366888,
		0.0156069, -0.00669486, -0.0287782, -0.0491941, -0.0665818, -0.0797641,
		-0.0878326, -0.0902143, -0.0867174, -0.0775488, -0.0633046, -0.0449323,
		-0.0236673, -0.000948946, 0.0216794, 0.0426776, 0.0606158, 0.0742744,
		0.082728, 0.0854092, 0.0821453, 0.0731686, 0.0590963, 0.0408846,
		0.0197595, -0.00287013, -0.0255111, -0.0466876, -0.0650402, -0.0794136,
		-0.0889294, -0.0930367, -0.09154, -0.0846022, -0.0727238, -0.0567006,
		-0.0375642, -0.0165097, 0.00518344, 0.0262323, 0.0454272, 0.0617,
		0.0741802, 0.0822359, 0.0854991, 0.0838738, 0.0775296, 0.0668805,
		0.0525537, 0.0353484, 0.0161897, -0.00392043, -0.0239537, -0.0429035,
		-0.0598307, -0.0739044, -0.084438, -0.0909184, -0.0930296, -0.0906677,
		-0.0839495, -0.0732113, -0.0589989, -0.0420486, -0.0232573, -0.00364327,
		0.0157015, 0.0336672, 0.0491876, 0.0613025, 0.0692204, 0.0723751,
		0.0704724, 0.0635232, 0.0518593, 0.0361286, 0.0172682, -0.00354345,
		-0.0249551, -0.0455273, -0.0638292, -0.078539, -0.0885437, -0.0930273,
		-0.0915421, -0.0840562, -0.0709713, -0.0531086, -0.0316623, -0.00812165,
		0.0158313, 0.0384447, 0.0580279, 0.0730842, 0.0824306, 0.0852984,
		0.081403, 0.0709773, 0.0547649, 0.0339721, 0.0101814, -0.0147675,
		-0.0389198, -0.0603608, -0.0773709, -0.0885671, -0.0930206, -0.0903384,
		-0.0807029, -0.0648641, -0.0440848, -0.0200428, 0.00530326, 0.0298731,
		0.0516362, 0.0687813, 0.0798693, 0.0839571, 0.0806804, 0.070289,
		0.0536304, 0.0320829, 0.00744237, -0.0182263, -0.0427629, -0.0640941,
		-0.0804107, -0.0903224, -0.092979, -0.0881447, -0.0762221, -0.0582196,
		-0.0356681, -0.0104917, 0.0151562, 0.0390768, 0.059215, 0.0738366,
		0.0816785, 0.0820589, 0.0749376, 0.0609209, 0.0412109, 0.0175023,
		-0.00816235, -0.0335692, -0.056524, -0.0750415, -0.0875177, -0.0928686,
		-0.0906239, -0.0809677, -0.0647227, -0.043278, -0.018469, 0.00758209,
		0.0326508, 0.0546026, 0.0715778, 0.0821517, 0.085457, 0.0812568,
		0.0699634, 0.0526002, 0.0307101, 0.00622035, -0.0187268, -0.0419601,
		-0.0614681, -0.075572, -0.083069, -0.0833339, -0.0763685, -0.0627978,
		-0.0438104, -0.0210518, 0.00352246, 0.0278186, 0.0497869, 0.0675993,
		0.0798048, 0.0854516, 0.0841638, 0.0761677, 0.0622647, 0.0437554,
		0.0223205, -0.000129495 };

static const double multiSineElev2p5A2[801] = { -1.29218e-05, -0.00461503,
		-0.00921473, -0.0137619, -0.0182063, -0.0224982, -0.0265891, -0.0304322,
		-0.0339831, -0.0371999, -0.0400447, -0.042483, -0.0444849, -0.0460254,
		-0.0470845, -0.0476478, -0.0477064, -0.0472575, -0.0463041, -0.0448553,
		-0.042926, -0.040537, -0.0377146, -0.0344906, -0.0309015, -0.0269885,
		-0.0227968, -0.0183751, -0.013775, -0.00905037, -0.0042568, 0.000549327,
		0.00531138, 0.00997325, 0.0144801, 0.018779, 0.0228197, 0.0265553,
		0.0299427, 0.0329435, 0.0355241, 0.0376564, 0.0393184, 0.0404939,
		0.0411734, 0.0413537, 0.0410384, 0.0402373, 0.038967, 0.0372501,
		0.0351152, 0.0325964, 0.029733, 0.0265686, 0.0231512, 0.0195317,
		0.015764, 0.0119036, 0.00800732, 0.00413231, 0.000335295, -0.00332824,
		-0.00680476, -0.0100435, -0.0129971, -0.0156224, -0.0178808, -0.0197391,
		-0.0211699, -0.0221519, -0.0226702, -0.0227167, -0.02229, -0.0213958,
		-0.0200465, -0.018261, -0.0160649, -0.0134897, -0.0105726, -0.00735606,
		-0.00388693, -0.000216109, 0.00360228, 0.00751164, 0.0114537, 0.0153693,
		0.0191992, 0.022885, 0.0263699, 0.0295996, 0.0325228, 0.0350923,
		0.0372655, 0.039005, 0.0402793, 0.041063, 0.0413375, 0.041091,
		0.0403191, 0.0390243, 0.0372168, 0.0349135, 0.0321386, 0.0289227,
		0.0253029, 0.0213218, 0.0170276, 0.0124728, 0.00771386, 0.0028104,
		-0.00217562, -0.00718077, -0.012141, -0.0169924, -0.0216722, -0.0261198,
		-0.0302771, -0.0340897, -0.0375076, -0.0404858, -0.0429849, -0.0449717,
		-0.0464197, -0.0473094, -0.0476287, -0.0473728, -0.0465446, -0.0451546,
		-0.0432204, -0.040767, -0.0378263, -0.0344363, -0.0306413, -0.0264906,
		-0.0220382, -0.0173421, -0.0124634, -0.0074656, -0.00241355, 0.00262723,
		0.00759151, 0.0124152, 0.0170362, 0.0213953, 0.0254368, 0.0291094,
		0.0323669, 0.0351684, 0.0374796, 0.0392724, 0.0405259, 0.0412263,
		0.0413671, 0.0409491, 0.0399808, 0.0384775, 0.0364618, 0.0339628,
		0.0310158, 0.0276618, 0.023947, 0.019922, 0.0156413, 0.0111624,
		0.00654487, 0.00184998, -0.00286051, -0.00752503, -0.012083, -0.0164758,
		-0.0206472, -0.0245445, -0.0281186, -0.0313255, -0.0341261, -0.0364867,
		-0.0383799, -0.0397846, -0.0406859, -0.0410759, -0.0409531, -0.0403227,
		-0.0391963, -0.0375918, -0.0355329, -0.0330487, -0.0301735, -0.0269459,
		-0.0234085, -0.0196071, -0.01559, -0.0114076, -0.00711129, -0.00275287,
		0.00161606, 0.0059449, 0.0101847, 0.0142889, 0.0182138, 0.0219192,
		0.0253687, 0.0285305, 0.0313775, 0.0338877, 0.0360442, 0.0378356,
		0.0392559, 0.0403046, 0.0409864, 0.0413112, 0.0412936, 0.040953,
		0.0403127, 0.0394, 0.0382452, 0.0368815, 0.0353441, 0.0336699,
		0.0318968, 0.0300628, 0.0282061, 0.0263639, 0.024572, 0.0228645,
		0.021273, 0.0198262, 0.0185498, 0.0174658, 0.0165924, 0.0159436,
		0.0155295, 0.0153555, 0.015423, 0.015729, 0.0162664, 0.0170239,
		0.0179868, 0.0191368, 0.0204524, 0.0219094, 0.0234815, 0.0251403,
		0.0268561, 0.0285984, 0.0303362, 0.0320387, 0.0336755, 0.0352175,
		0.0366369, 0.037908, 0.0390074, 0.0399142, 0.0406105, 0.0410818,
		0.0413167, 0.0413075, 0.04105, 0.0405436, 0.0397915, 0.0388001,
		0.0375793, 0.0361422, 0.0345046, 0.0326851, 0.0307045, 0.0285856,
		0.0263525, 0.0240308, 0.0216465, 0.0192262, 0.0167961, 0.0143821,
		0.012009, 0.00970028, 0.00747789, 0.00536168, 0.00336926, 0.00151571,
		-0.000186605, -0.00172821, -0.0031026, -0.00430632, -0.00533894,
		-0.00620304, -0.00690409, -0.00745033, -0.00785258, -0.00812401,
		-0.00827988, -0.00833725, -0.00831464, -0.00823173, -0.00810898,
		-0.00796723, -0.00782742, -0.00771011, -0.00763524, -0.00762167,
		-0.00768696, -0.00784702, -0.00811583, -0.00850526, -0.00902482,
		-0.00968155, -0.0104799, -0.0114215, -0.0125057, -0.0137286, -0.0150842,
		-0.0165638, -0.0181564, -0.0198489, -0.0216263, -0.0234718, -0.0253675,
		-0.0272942, -0.0292321, -0.0311609, -0.0330605, -0.0349107, -0.0366922,
		-0.0383866, -0.0399765, -0.0414465, -0.0427824, -0.0439725, -0.0450071,
		-0.0458789, -0.0465829, -0.047117, -0.0474814, -0.0476788, -0.0477148,
		-0.047597, -0.0473355, -0.0469424, -0.0464318, -0.0458193, -0.0451219,
		-0.0443579, -0.043546, -0.0427057, -0.0418564, -0.0410173, -0.0402071,
		-0.0394437, -0.0387436, -0.038122, -0.0375924, -0.0371662, -0.0368527,
		-0.0366588, -0.0365889, -0.036645, -0.0368263, -0.0371294, -0.0375484,
		-0.0380748, -0.0386978, -0.0394042, -0.0401789, -0.041005, -0.0418641,
		-0.0427364, -0.0436011, -0.044437, -0.0452225, -0.045936, -0.0465562,
		-0.0470628, -0.0474363, -0.0476587, -0.0477134, -0.0475862, -0.0472645,
		-0.0467385, -0.0460005, -0.0450459, -0.0438725, -0.0424811, -0.040875,
		-0.0390606, -0.0370467, -0.0348447, -0.0324685, -0.029934, -0.0272591,
		-0.0244635, -0.0215682, -0.0185952, -0.0155676, -0.0125085, -0.00944147,
		-0.00638964, -0.00337563, -0.000421185, 0.00245316, 0.00522834,
		0.00788705, 0.0104139, 0.0127958, 0.0150217, 0.0170834, 0.0189749,
		0.020693, 0.0222368, 0.0236083, 0.0248115, 0.0258531, 0.0267418,
		0.0274882, 0.0281048, 0.0286053, 0.0290049, 0.0293194, 0.0295654,
		0.0297596, 0.0299187, 0.0300589, 0.0301959, 0.0303442, 0.030517,
		0.030726, 0.0309809, 0.0312896, 0.0316578, 0.0320886, 0.0325831,
		0.0331395, 0.0337537, 0.0344193, 0.0351272, 0.0358662, 0.0366232,
		0.0373828, 0.0381282, 0.0388411, 0.0395022, 0.0400912, 0.0405876,
		0.0409705, 0.0412195, 0.0413147, 0.0412371, 0.0409692, 0.0404951,
		0.0398007, 0.0388744, 0.0377069, 0.0362919, 0.0346257, 0.0327081,
		0.0305419, 0.0281331, 0.025491, 0.0226282, 0.0195607, 0.016307,
		0.012889, 0.0093309, 0.00565953, 0.00190373, -0.00190588, -0.00573722,
		-0.00955715, -0.0133319, -0.0170274, -0.0206098, -0.0240458, -0.0273032,
		-0.0303509, -0.0331599, -0.0357032, -0.0379564, -0.0398977, -0.0415086,
		-0.0427738, -0.0436814, -0.0442233, -0.044395, -0.0441959, -0.0436292,
		-0.0427017, -0.0414239, -0.0398099, -0.037877, -0.0356456, -0.0331389,
		-0.0303827, -0.0274048, -0.024235, -0.0209044, -0.0174453, -0.0138905,
		-0.010273, -0.00662575, -0.00298111, 0.000629589, 0.0041763, 0.00763064,
		0.0109662, 0.014159, 0.0171873, 0.0200324, 0.0226782, 0.0251118,
		0.0273236, 0.0293069, 0.0310581, 0.032577, 0.0338662, 0.0349313,
		0.0357805, 0.0364246, 0.0368767, 0.0371519, 0.0372668, 0.0372398,
		0.0370902, 0.036838, 0.0365037, 0.036108, 0.0356711, 0.0352129,
		0.0347524, 0.0343073, 0.033894, 0.0335273, 0.03322, 0.0329831,
		0.0328252, 0.0327527, 0.0327697, 0.0328778, 0.0330765, 0.0333625,
		0.0337306, 0.0341735, 0.0346815, 0.0352434, 0.0358462, 0.0364755,
		0.0371158, 0.0377503, 0.038362, 0.038933, 0.0394457, 0.0398822,
		0.0402254, 0.0404583, 0.0405654, 0.0405319, 0.0403445, 0.0399913,
		0.0394622, 0.0387488, 0.0378448, 0.0367457, 0.0354493, 0.0339553,
		0.0322657, 0.0303845, 0.0283177, 0.0260732, 0.0236609, 0.0210923,
		0.0183806, 0.0155402, 0.0125869, 0.00953762, 0.0064101, 0.00322274,
		-5.53862e-06, -0.00325553, -0.00650793, -0.00974352, -0.0129433,
		-0.0160888, -0.019162, -0.0221456, -0.0250234, -0.0277797, -0.0304003,
		-0.0328718, -0.0351821, -0.0373204, -0.0392768, -0.0410431, -0.042612,
		-0.0439775, -0.045135, -0.0460808, -0.0468123, -0.0473282, -0.0476281,
		-0.0477123, -0.0475823, -0.0472402, -0.0466891, -0.0459326, -0.044975,
		-0.0438212, -0.0424769, -0.0409481, -0.0392414, -0.0373641, -0.0353237,
		-0.0331286, -0.0307875, -0.0283096, -0.0257047, -0.0229834, -0.0201566,
		-0.017236, -0.0142338, -0.0111629, -0.00803699, -0.00487023,
		-0.00167753, 0.00152558, 0.00472297, 0.00789794, 0.0110333, 0.0141113,
		0.017114, 0.0200231, 0.0228201, 0.0254866, 0.0280041, 0.0303546,
		0.0325202, 0.0344838, 0.0362291, 0.0377406, 0.0390038, 0.0400058,
		0.0407348, 0.0411809, 0.0413359, 0.0411936, 0.0407499, 0.0400029,
		0.0389529, 0.0376028, 0.0359579, 0.0340259, 0.0318172, 0.0293446,
		0.0266233, 0.0236709, 0.0205073, 0.0171546, 0.0136368, 0.00997977,
		0.0062109, 0.00235901, -0.001546, -0.00547335, -0.00939172, -0.0132695,
		-0.0170752, -0.0207775, -0.0243458, -0.0277505, -0.0309633, -0.0339573,
		-0.0367075, -0.0391908, -0.0413868, -0.0432771, -0.0448464, -0.0460821,
		-0.0469746, -0.0475175, -0.0477074, -0.0475441, -0.0470307, -0.0461732,
		-0.044981, -0.0434661, -0.0416435, -0.0395308, -0.0371481, -0.0345177,
		-0.0316639, -0.0286127, -0.0253915, -0.0220291, -0.018555, -0.0149994,
		-0.0113925, -0.00776496, -0.00414677, -0.000567473, 0.00294423,
		0.00636073, 0.00965578, 0.0128046, 0.0157843, 0.0185735, 0.0211534,
		0.0235069, 0.0256193, 0.0274781, 0.0290732, 0.0303967, 0.0314432,
		0.0322095, 0.0326943, 0.0328988, 0.0328261, 0.0324811, 0.0318705,
		0.0310027, 0.0298875, 0.0285362, 0.0269612, 0.0251758, 0.0231943,
		0.0210319, 0.0187042, 0.0162274, 0.013618, 0.0108927, 0.00806855,
		0.0051625, 0.00219157, -0.000827275, -0.0038772, -0.00694153,
		-0.0100037, -0.0130475, -0.0160568, -0.0190158, -0.0219087, -0.0247204,
		-0.0274357, -0.0300396, -0.0325178, -0.0348558, -0.0370398, -0.0390562,
		-0.0408918, -0.0425339, -0.0439702, -0.0451893, -0.0461802, -0.0469328,
		-0.0474379, -0.0476875, -0.0476744, -0.0473929, -0.0468386, -0.046009,
		-0.0449027, -0.0435206, -0.0418652, -0.0399413, -0.0377558, -0.0353176,
		-0.0326382, -0.0297312, -0.0266127, -0.0233009, -0.0198166, -0.0161826,
		-0.012424, -0.0085677, -0.00464258, -0.000679093, 0.00329091,
		0.00723443, 0.0111176, 0.0149061, 0.0185652, 0.0220606, 0.0253582,
		0.0284251, 0.0312295, 0.0337414, 0.0359327, 0.0377779, 0.0392543,
		0.0403423, 0.0410256, 0.041292, 0.0411331, 0.0405447, 0.039527,
		0.0380847, 0.0362272, 0.0339683, 0.0313265, 0.0283246, 0.0249898,
		0.0213533, 0.0174502, 0.0133191, 0.00900161, 0.00454207, -1.29218e-05 };

static const double multiSineElev2p5A5[801] = { -6.47475e-05, -0.0108114,
		-0.0201487, -0.0272803, -0.031611, -0.032795, -0.0307615, -0.0257158,
		-0.0181163, -0.0086299, 0.00193014, 0.0126776, 0.0227322, 0.0312955,
		0.037719, 0.0415567, 0.042599, 0.0408853, 0.0366933, 0.0305088,
		0.0229765, 0.0148389, 0.00686744, -0.000206836, -0.00575737,
		-0.00931495, -0.010605, -0.00956656, -0.00635082, -0.00130121,
		0.00508391, 0.0122015, 0.0194023, 0.0260519, 0.0315882, 0.035572,
		0.0377231, 0.037942, 0.0363136, 0.0330938, 0.0286808, 0.0235732,
		0.0183208, 0.0134707, 0.00951645, 0.00685199, 0.00573739, 0.00627745,
		0.00841564, 0.0119435, 0.016524, 0.0217271, 0.0270724, 0.0320768,
		0.0363001, 0.0393864, 0.0410965, 0.0413276, 0.0401208, 0.0376537,
		0.0342206, 0.0302017, 0.0260247, 0.0221227, 0.0188922, 0.0166554,
		0.0156304, 0.0159121, 0.0174646, 0.0201268, 0.0236302, 0.0276258,
		0.0317193, 0.0355093, 0.0386258, 0.0407657, 0.0417202, 0.0413942,
		0.039813, 0.0371187, 0.0335546, 0.0294408, 0.0251423, 0.0210333,
		0.0174613, 0.0147141, 0.0129927, 0.0123929, 0.0128969, 0.0143757,
		0.0166023, 0.0192729, 0.0220362, 0.0245258, 0.0263942, 0.0273439,
		0.0271539, 0.0256987, 0.0229585, 0.0190189, 0.0140619, 0.00834788,
		0.00219137, -0.00406756, -0.0100933, -0.0155835, -0.0202935, -0.024055,
		-0.0267868, -0.028498, -0.0292815, -0.0293012, -0.0287731, -0.0279421,
		-0.0270575, -0.0263497, -0.0260092, -0.0261713, -0.0269064, -0.0282176,
		-0.0300445, -0.0322738, -0.0347537, -0.0373123, -0.0397762, -0.0419888,
		-0.0438254, -0.0452046, -0.0460938, -0.0465101, -0.0465147, -0.0462041,
		-0.0456964, -0.0451169, -0.044583, -0.0441909, -0.0440048, -0.0440509,
		-0.0443153, -0.0447471, -0.0452661, -0.0457729, -0.0461626, -0.046338,
		-0.0462222, -0.0457694, -0.0449711, -0.0438585, -0.0425006, -0.0409966,
		-0.0394659, -0.038034, -0.0368184, -0.0359138, -0.0353802, -0.0352329,
		-0.0354385, -0.035915, -0.0365369, -0.0371457, -0.0375638, -0.0376109,
		-0.0371216, -0.0359619, -0.0340431, -0.0313324, -0.0278578, -0.0237074,
		-0.0190236, -0.0139914, -0.00882328, -0.00374056, 0.00104544,
		0.00535193, 0.00904041, 0.0120283, 0.0142954, 0.0158843, 0.0168951,
		0.0174747, 0.0178013, 0.0180666, 0.0184562, 0.0191314, 0.0202127,
		0.0217678, 0.0238047, 0.0262705, 0.029056, 0.032006, 0.0349339,
		0.037639, 0.0399251, 0.0416192, 0.0425865, 0.0427433, 0.0420635,
		0.0405801, 0.0383813, 0.0356006, 0.0324039, 0.0289728, 0.0254869,
		0.0221074, 0.0189619, 0.0161339, 0.0136564, 0.0115108, 0.00963147,
		0.00791491, 0.00623256, 0.00444622, 0.00242423, 5.6784e-05, -0.00273117,
		-0.00597079, -0.00964478, -0.013688, -0.0179932, -0.0224204, -0.0268109,
		-0.0310019, -0.034842, -0.0382058, -0.0410044, -0.0431936, -0.0447756,
		-0.045797, -0.0463411, -0.0465168, -0.0464439, -0.0462379, -0.0459948,
		-0.0457775, -0.0456068, -0.0454558, -0.0452507, -0.0448759, -0.0441857,
		-0.0430183, -0.0412138, -0.0386321, -0.035171, -0.0307805, -0.0254729,
		-0.0193285, -0.0124933, -0.00517211, 0.00238553, 0.0099029, 0.0170975,
		0.0237033, 0.0294919, 0.0342912, 0.0379992, 0.0405909, 0.0421199,
		0.0427113, 0.0425493, 0.0418588, 0.0408829, 0.0398599, 0.0389993,
		0.0384617, 0.0383429, 0.0386637, 0.0393682, 0.0403282, 0.0413555,
		0.0422199, 0.0426719, 0.042467, 0.0413907, 0.039281, 0.0360459,
		0.0316756, 0.0262464, 0.019918, 0.0129222, 0.00554557, -0.00189311,
		-0.00906804, -0.0156726, -0.0214438, -0.0261825, -0.0297681, -0.0321662,
		-0.0334281, -0.0336835, -0.0331252, -0.0319891, -0.0305309, -0.0290005,
		-0.0276186, -0.0265557, -0.0259169, -0.0257328, -0.025958, -0.026477,
		-0.027117, -0.0276655, -0.0278928, -0.0275751, -0.0265173, -0.0245733,
		-0.0216611, -0.0177722, -0.0129742, -0.00740555, -0.00126497,
		0.00520546, 0.0117404, 0.0180735, 0.0239587, 0.0291893, 0.0336133,
		0.0371421, 0.0397536, 0.0414886, 0.0424403, 0.0427407, 0.0425414,
		0.0419948, 0.041235, 0.0403616, 0.0394275, 0.0384328, 0.0373249,
		0.0360043, 0.0343372, 0.0321723, 0.0293602, 0.0257744, 0.0213307,
		0.016004, 0.00983925, 0.00295722, -0.00444751, -0.0121152, -0.0197364,
		-0.0269721, -0.0334779, -0.0389297, -0.0430477, -0.0456188, -0.0465125,
		-0.0456915, -0.0432146, -0.0392315, -0.033971, -0.0277228, -0.0208147,
		-0.0135873, -0.00636889, 0.000548381, 0.00692764, 0.0126012, 0.0174772,
		0.0215399, 0.0248415, 0.0274892, 0.0296269, 0.0314136, 0.033002,
		0.0345179, 0.0360427, 0.0376022, 0.0391602, 0.04062, 0.0418324,
		0.0426095, 0.0427433, 0.0420276, 0.0402802, 0.0373648, 0.0332087,
		0.0278162, 0.0212754, 0.0137584, 0.00551369, -0.00314733, -0.0118694,
		-0.0202767, -0.0279975, -0.0346889, -0.0400598, -0.0438893, -0.0460394,
		-0.0464624, -0.0452005, -0.042379, -0.0381942, -0.0328958, -0.0267675,
		-0.0201054, -0.0131975, -0.0063057, 0.000348959, 0.00659578, 0.0123188,
		0.0174561, 0.0219935, 0.0259554, 0.0293919, 0.0323652, 0.0349359,
		0.0371509, 0.0390346, 0.0405828, 0.0417611, 0.0425082, 0.0427414,
		0.0423665, 0.0412888, 0.0394255, 0.0367173, 0.0331381, 0.0287028,
		0.0234707, 0.0175467, 0.0110767, 0.00424168, -0.00275274, -0.0096874,
		-0.0163421, -0.0225081, -0.0279985, -0.0326578, -0.0363675, -0.0390497,
		-0.0406673, -0.0412208, -0.0407439, -0.0392972, -0.0369603, -0.0338252,
		-0.0299902, -0.0255544, -0.0206153, -0.0152673, -0.00960286,
		-0.00371458, 0.00230131, 0.00834138, 0.0142918, 0.0200261, 0.025405,
		0.0302774, 0.0344853, 0.0378688, 0.0402748, 0.0415662, 0.041632,
		0.0403965, 0.0378289, 0.0339494, 0.028834, 0.022615, 0.0154796,
		0.00766312, -0.000558872, -0.0088828, -0.0169905, -0.0245639,
		-0.0313005, -0.0369276, -0.0412151, -0.0439867, -0.0451279, -0.0445905,
		-0.0423946, -0.0386268, -0.0334356, -0.0270246, -0.0196429, -0.0115744,
		-0.00312635, 0.00538281, 0.0136355, 0.0213262, 0.0281724, 0.0339238,
		0.0383704, 0.0413498, 0.0427519, 0.0425227, 0.0406665, 0.0372461,
		0.0323809, 0.0262439, 0.0190562, 0.0110796, 0.00260818, -0.00604282,
		-0.0145483, -0.0225863, -0.0298507, -0.0360639, -0.0409891, -0.0444403,
		-0.0462907, -0.0464783, -0.0450086, -0.0419542, -0.0374507, -0.0316906,
		-0.0249132, -0.0173939, -0.0094308, -0.00133188, 0.00659875, 0.0140729,
		0.0208293, 0.0266421, 0.031328, 0.0347494, 0.0368169, 0.0374887,
		0.036768, 0.0347006, 0.0313698, 0.0268928, 0.0214156, 0.0151094,
		0.00816694, 0.000798529, -0.00677068, -0.0143044, -0.0215592,
		-0.0282893, -0.0342527, -0.0392184, -0.0429751, -0.0453408, -0.046173,
		-0.0453786, -0.0429239, -0.0388416, -0.0332361, -0.0262854, -0.0182385,
		-0.00940857, -0.000162271, 0.00909608, 0.0179432, 0.0259584, 0.0327463,
		0.0379598, 0.0413204, 0.0426371, 0.0418189, 0.0388829, 0.0339559,
		0.0272691, 0.0191467, 0.00998887, 0.000249625, -0.00958818, -0.0190396,
		-0.0276442, -0.0349908, -0.0407387, -0.0446346, -0.0465232, -0.0463523,
		-0.0441719, -0.0401266, -0.0344447, -0.0274217, -0.0194031, -0.0107641,
		-0.00189118, 0.00683609, 0.0150609, 0.0224621, 0.0287637, 0.033742,
		0.0372295, 0.0391162, 0.0393496, 0.037933, 0.0349238, 0.030431,
		0.0246122, 0.0176711, 0.00985458, 0.00144768, -0.00723135, -0.0158388,
		-0.0240154, -0.0313986, -0.0376374, -0.0424095, -0.0454392, -0.0465162,
		-0.0455127, -0.0423984, -0.0372509, -0.0302608, -0.0217303, -0.0120637,
		-0.00175073, 0.00865705, 0.0185768, 0.027429, 0.0346742, 0.0398501,
		0.0426051, 0.0427271, 0.0401629, 0.0350289, 0.0276096, 0.0183444,
		0.00780344, -0.00334743, -0.0143891, -0.0245971, -0.0332909, -0.0398821,
		-0.0439163, -0.0451072, -0.0433587, -0.0387744, -0.0316523, -0.0224661,
		-0.0118337, -0.000474473, 0.0108397, 0.0213388, 0.0303079, 0.0371372,
		0.041364, 0.0427046, 0.0410727, 0.0365843, 0.0295482, 0.0204423,
		0.00987977, -0.00143506, -0.0127556, -0.0233438, -0.0325201, -0.0397068,
		-0.0444647, -0.0465183, -0.04577, -0.0423011, -0.0363619, -0.0283503,
		-0.0187821, -0.00825486, 0.00259172, 0.0131161, 0.0227136, 0.03085,
		0.0370901, 0.041118, 0.0427496, 0.0419369, 0.0387648, 0.0334403,
		0.0262769, 0.0176742, 0.00809486, -0.00196022, -0.0119768, -0.0214517,
		-0.0299153, -0.0369522, -0.042219, -0.0454592, -0.0465148, -0.0453339,
		-0.0419748, -0.0366056, -0.0294995, -0.0210243, -0.0116286, -0.00182164,
		0.00785073, 0.0168336, 0.0245938, 0.0306512, 0.0346102, 0.0361876,
		0.0352362, 0.0317616, 0.0259297, 0.0180643, 0.00863409, -0.00177173,
		-0.0124775, -0.0227637, -0.0319146, -0.0392695, -0.0442719, -0.0465136,
		-0.045771, -0.0420281, -0.0354857, -0.0265543, -0.0158311, -0.00406082,
		0.00791567, 0.0192223, 0.029014, 0.0365421, 0.0412153, 0.0426492,
		0.0407015, 0.0354886, 0.0273824, 0.016986, 0.00509069, -0.00738373,
		-0.0194599, -0.0301804, -0.0386855, -0.0442836, -0.0465103, -0.0451692,
		-0.0403515, -0.032432, -0.0220424, -0.0100214, 0.00265163, 0.0149365,
		0.0258181, 0.0343906, 0.0399346, 0.0419785, 0.0403402, 0.0351445,
		0.0268152, 0.0160414, 0.00372118, -0.00911316, -0.0213814, -0.0320471,
		-0.0402053, -0.0451612, -0.0464895, -0.0440724, -0.038111, -0.0291098,
		-0.0178341, -0.00524587, 0.00757808, 0.0195384, 0.0296075, 0.0369183,
		0.0408392, 0.0410294, 0.0374688, 0.0304605, 0.0206054, 0.00875116,
		-0.00408117, -0.0167846, -0.028262, -0.0375207, -0.0437589, -0.0464343,
		-0.045312, -0.0404839, -0.0323613, -0.021639, -0.00923452, 0.00379104,
		0.0163254, 0.0273013, 0.0357889, 0.0410759, 0.0427285, 0.0406284,
		0.0349817, 0.0263001, 0.0153551, 0.00311018, -0.00936338, -0.0209801,
		-0.0307341, -0.037786, -0.0415345, -0.0416669, -0.0381843, -0.0313989,
		-0.0219052, -0.0105259, 0.00176123, 0.0139093, 0.0248935, 0.0337996,
		0.0399024, 0.0427258, 0.0420819, 0.0380838, 0.0311324, 0.0218777,
		0.0111603, -6.47475e-05 };

void Usual_Routine();
void configIMU();

static inline void updateOSD(double roll, double pitch) {
	Display_Roll(roll); //Displays roll value, argument roll
	Display_Pitch(pitch); //Display pitch values, argument pitch
	Replace_Center_Line(roll, pitch); //deletes old center line and redraws it based on new roll and pitch value, first argument pitch, second argument roll
}

void CreateTasks();
void configMPU6050I2C(uint8_t DevAddr);
void OpenFileRoutine(struct FileRoutines* OpenOnboardSD);

static inline void GetIMUdata(BYTE IMU_command[], uint8_t Command_buffer_size,
		double IMU_data[], uint8_t IMU_raw[]) {

	DSPIStart(3, IMU_command, IMU_raw, Command_buffer_size, NULL); //start talking to IMU
	while (!DSPIdone(3)) {
	}; //wait for DSPI to finish
	IMU_data[0] = 0.02 * (short int) (IMU_raw[0] * 256 + IMU_raw[1]); //Z Gyro
	IMU_data[1] = 0.00025 * (short int) (IMU_raw[2] * 256 + IMU_raw[3]); //Zero For some reason
	IMU_data[2] = 0.00025 * (short int) (IMU_raw[4] * 256 + IMU_raw[5]); //X Accel
	IMU_data[3] = 0.00025 * (short int) (IMU_raw[6] * 256 + IMU_raw[7]); //Y Accel
	IMU_data[4] = 0.00025 * (short int) (IMU_raw[8] * 256 + IMU_raw[9]); //Z Accel
	IMU_data[5] = 0.02 * (short int) (IMU_raw[10] * 256 + IMU_raw[11]); // X Gyro
	IMU_data[6] = 0.02 * (short int) (IMU_raw[12] * 256 + IMU_raw[13]); // Y Gyro
}

static inline double GetTiltAngle_Pitch(double IMU_data[]) {
	return (-fast_atan2(-IMU_data[2],
			sqrt(IMU_data[3] * IMU_data[3] + IMU_data[4] * IMU_data[4]))
			* rad2deg);

}

static inline double GetTiltAngle_Roll(double IMU_data[]) {

	return (fast_atan2(IMU_data[3],
			sqrt(IMU_data[2] * IMU_data[2] + IMU_data[4] * IMU_data[4]))
			* rad2deg);
}

static inline void GetAttitude(double IMU_data[],
		struct angle* complimentary_filter, float biasGx, float biasGy,
		float biasGz) {
	/*	(*complimentary_filter).roll = 0.98
	 * ((*complimentary_filter).roll + 0.01 * IMU_data[5])
	 + 0.02 * GetTiltAngle_Roll(IMU_data);
	 (*complimentary_filter).pitch = 0.98
	 * ((*complimentary_filter).pitch + 0.01 * IMU_data[6])
	 + 0.02 * GetTiltAngle_Pitch(IMU_data);*/

	(*complimentary_filter).roll = (*complimentary_filter).roll
			+ IMU_data[5] * 0.01 - biasGx * 0.01;
	(*complimentary_filter).pitch = (*complimentary_filter).pitch
			+ IMU_data[6] * 0.01 - biasGy * 0.01;
	//(*complimentary_filter).yaw=(*complimentary_filter).yaw+IMU_data[0]*0.01-biasGz*0.01;
}
int SerialRoutine(int port_num);

static inline void AssignIMUtoSD(char SD_card[], uint8_t IMU_raw[]) {
	uint8_t i = 3;
	for (i = 3; i < 15; i++) {
		if (i == 5)
			SD_card[5] = IMU_raw[12];
		if (i == 6)
			SD_card[6] = IMU_raw[13];
		if (i != 5 && i != 6)
			SD_card[i] = IMU_raw[i - 3];
	}

}

static inline void AssignModPilotDatatoSD(float pilotDelayedCommand,char SD_card[]){
	static float2byte data2convert;

	data2convert.data=pilotDelayedCommand;
	SD_card[103]=data2convert.dataBytes[3];
	SD_card[104]=data2convert.dataBytes[2];
	SD_card[105]=data2convert.dataBytes[1];
	SD_card[106]=data2convert.dataBytes[0];



}

static inline void AssignAttitudetoSD(struct angle complimentary_filter,
		char SD_card[]) {
	int16_t int_roll_fil = complimentary_filter.roll * 250;
	int16_t int_pitch_fil = complimentary_filter.pitch * 250;

	SD_card[23] = (int_roll_fil & 0xFF00) >> 8;
	SD_card[24] = (int_roll_fil & 0x00FF);

	SD_card[25] = (int_pitch_fil & 0xFF00) >> 8;
	SD_card[26] = (int_pitch_fil & 0x00FF);
}

static inline void AssignGPSxtoSD(char GPS_packet[], char SD_card[]) {

	//Px
	SD_card[27] = GPS_packet[43];
	SD_card[28] = GPS_packet[42];
	SD_card[29] = GPS_packet[41];
	SD_card[30] = GPS_packet[40];
	SD_card[31] = GPS_packet[39];
	SD_card[32] = GPS_packet[38];
	SD_card[33] = GPS_packet[37];
	SD_card[34] = GPS_packet[36];

	//Py
	SD_card[35] = GPS_packet[51];
	SD_card[36] = GPS_packet[50];
	SD_card[37] = GPS_packet[49];
	SD_card[38] = GPS_packet[48];
	SD_card[39] = GPS_packet[47];
	SD_card[40] = GPS_packet[46];
	SD_card[41] = GPS_packet[45];
	SD_card[42] = GPS_packet[44];

	//Pz
	SD_card[43] = GPS_packet[59];
	SD_card[44] = GPS_packet[58];
	SD_card[45] = GPS_packet[57];
	SD_card[46] = GPS_packet[56];
	SD_card[47] = GPS_packet[55];
	SD_card[48] = GPS_packet[54];
	SD_card[49] = GPS_packet[53];
	SD_card[50] = GPS_packet[52];

	//Vy
	SD_card[59] = GPS_packet[95];
	SD_card[60] = GPS_packet[94];
	SD_card[61] = GPS_packet[93];
	SD_card[62] = GPS_packet[92];
	SD_card[63] = GPS_packet[91];
	SD_card[64] = GPS_packet[90];
	SD_card[65] = GPS_packet[89];
	SD_card[66] = GPS_packet[88];

	//Vz
	SD_card[67] = GPS_packet[103];
	SD_card[68] = GPS_packet[102];
	SD_card[69] = GPS_packet[101];
	SD_card[70] = GPS_packet[100];
	SD_card[71] = GPS_packet[99];
	SD_card[72] = GPS_packet[98];
	SD_card[73] = GPS_packet[97];
	SD_card[74] = GPS_packet[96];

	//Vx
	SD_card[51] = GPS_packet[87];
	SD_card[52] = GPS_packet[86];
	SD_card[53] = GPS_packet[85];
	SD_card[54] = GPS_packet[84];
	SD_card[55] = GPS_packet[83];
	SD_card[56] = GPS_packet[82];
	SD_card[57] = GPS_packet[81];
	SD_card[58] = GPS_packet[80];

	//sol sat
	SD_card[75] = GPS_packet[133];

}

static inline void AssignPilot_toSD(char SD_card[], uint16_t pilot_input[],
		uint16_t controlSwitch) {

	SD_card[15] = (pilot_input[0] & 0xFF00) >> 8;
	SD_card[16] = (pilot_input[0] & 0x00FF);

	SD_card[17] = (pilot_input[2] & 0xFF00) >> 8;
	SD_card[18] = (pilot_input[2] & 0x00FF);

	SD_card[19] = (pilot_input[1] & 0xFF00) >> 8;
	SD_card[20] = (pilot_input[1] & 0x00FF);

	SD_card[21] = (pilot_input[3] & 0xFF00) >> 8;
	SD_card[22] = (pilot_input[3] & 0x00FF);

	controlSwitch < 1000 ? SD_card[84] = 100 : SD_card[84] = 0;
}

static inline void readSatRec(int fdSpektrum, char spektrum_packet_raw[]) {
	uint8_t i = 2;
	read(fdSpektrum, &spektrum_packet_raw[0], 1);
	if ((unsigned char) spektrum_packet_raw[0] == 0xFF) {
		read(fdSpektrum, &spektrum_packet_raw[1], 1);
		if ((unsigned char) spektrum_packet_raw[1] == 0xFF) {
			for (i = 2; i < 5; i++)
				read(fdSpektrum, &spektrum_packet_raw[i], 1);
			if ((unsigned char) (spektrum_packet_raw[4] & 0x80) == 0x80) {
				for (i = 5; i < 30; i++)
					read(fdSpektrum, &spektrum_packet_raw[i], 1);

			}

		}
	}
}

HiResTimer* InitTimer(int clock_number);

static inline uint8_t GetDeltaT(HiResTimer* timer) {
	static double LastTime = 0;
	double CurrentTime = timer->readTime();
	uint8_t DeltaTime = (CurrentTime - LastTime) * 10000;
	LastTime = CurrentTime;
	return (DeltaTime);
}

static inline void AssignDeltaTandCounter(char SD_card[], HiResTimer* timer) {
	SD_card[137] = GetDeltaT(timer);
	SD_card[138] = SD_card[138] + 1;
}

static inline void Read_Serial_Data(int fdGPS, uint8_t header[],
		int SizeofHeader, char GPS_packet[], uint8_t NumberofBytestoRead) {
	int i = 0;
	uint8_t header_flag = 1;
	read(fdGPS, &GPS_packet[0], 1);
	i = 1;
	if ((unsigned char) GPS_packet[0] == header[0]) {
		for (i = 1; i < SizeofHeader; i++) {
			read(fdGPS, &GPS_packet[i], 1);
			if ((unsigned char) GPS_packet[i] == header[i])
				header_flag += 1;
		}
		if (header_flag == SizeofHeader) {
			for (i = SizeofHeader; i < NumberofBytestoRead; i++)
				read(fdGPS, &GPS_packet[i], 1);
		}

	}
}

static inline void AssignADCtoSD(float adcVal[], char SD_card[]) {
	int8_t intval0 = adcVal[0] * 75;
	int8_t intval1 = adcVal[1] * 75;
	int8_t intval2 = adcVal[2] * 75;
	int8_t intval3 = adcVal[3] * 75;

	int8_t intval4 = adcVal[4] * 75;
	int8_t intval5 = adcVal[5] * 75;
	int8_t intval6 = adcVal[6] * 75;
	int8_t intval7 = adcVal[7] * 75;

	SD_card[76] = intval0;
	SD_card[77] = intval1;
	SD_card[78] = intval2;
	SD_card[79] = intval3;

	SD_card[80] = intval4;
	SD_card[81] = intval5;
	SD_card[82] = intval6;
	SD_card[83] = intval7;
}
/* --------------------------------------------------------------------------
 Calculate a CRC value to be used by CRC calculation functions.
 -------------------------------------------------------------------------- */
static inline unsigned long CRC32Value(int i) {
	int j;
	unsigned long ulCRC;
	ulCRC = i;
	for (j = 8; j > 0; j--) {
		if (ulCRC & 1)
			ulCRC = (ulCRC >> 1) ^ CRC32_POLYNOMIAL;
		else
			ulCRC >>= 1;
	}
	return ulCRC;
}

/* --------------------------------------------------------------------------
 Calculates the CRC-32 of a block of data all at once
 -------------------------------------------------------------------------- */
static inline unsigned long CalculateBlockCRC32(unsigned long ulCount, /* Number of bytes in the data block */
char *ucBuffer) /* Data block */
{
	unsigned long ulTemp1;
	unsigned long ulTemp2;
	unsigned long ulCRC = 0;
	while (ulCount-- != 0) {
		ulTemp1 = (ulCRC >> 8) & 0x00FFFFFFL;
		ulTemp2 = CRC32Value(((int) ulCRC ^ *ucBuffer++) & 0xff);
		ulCRC = ulTemp1 ^ ulTemp2;
	}
	return (ulCRC);
}

static inline double GetCurrentTime(HiResTimer* timer) {
	return (timer->readTime());
}

#endif /* ACCESSORY_FUNCTIONS_H_ */
